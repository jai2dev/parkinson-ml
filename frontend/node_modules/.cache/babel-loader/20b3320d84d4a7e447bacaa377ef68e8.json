{"ast":null,"code":"var _jsxFileName = \"/home/jaidev/college/mlh/parkinsonai/frontend/parkinson/src/Components/test.js\";\nimport React, { useEffect, useState } from 'react';\nimport docpic from './service.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Test extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: ''\n    };\n    this.handleUploadFile = this.handleUploadFile.bind(this);\n  }\n\n  handleUploadFile(ev) {\n    ev.preventDefault();\n    const data = new FormData();\n    data.append('file', this.uploadInput.files[0]); // data.append('filename', this.fileName.value);\n\n    fetch('http://localhost:8080/predict', {\n      method: 'POST',\n      body: data\n    }).then(response => {\n      this.console.log(data);\n      response.json().then(body => {\n        this.setState({\n          result: data.prediction\n        });\n      });\n    });\n  } //   console.log(data);\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"test\",\n      className: \"test\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"test-h\",\n        children: \"Our service\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-t\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Check Whether you have\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 44\n            }, this), \" Parkinson's Disease or not\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"row justify-content-between align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"drop-area\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: this.handleUploadFile,\n              className: \"my-form\",\n              encType: \"multipart/form-data\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Upload Your audio in .wav format here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                ref: ref => {\n                  this.uploadInput = ref;\n                },\n                className: \"select\",\n                type: \"file\",\n                name: \"file\",\n                id: \"fileElem\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"button\",\n                htmlFor: \"fileElem\",\n                type: \"submit\",\n                value: \"Upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"doctor\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"doc-pic\",\n          src: docpic,\n          alt: \"doc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"prediction\",\n          children: this.result\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Probability of Patient having Parkinson's\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"how\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"cal\",\n          children: \"How the result is calculated?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" After you submit your voice file. The system then runs some algorithms to extract important information from the audio file. Further the information is send to the extensively tested machine learning model and then model predicts whether the user has parkinson's diesease or not\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Test; // export default Example;","map":{"version":3,"sources":["/home/jaidev/college/mlh/parkinsonai/frontend/parkinson/src/Components/test.js"],"names":["React","useEffect","useState","docpic","Test","Component","constructor","props","state","result","handleUploadFile","bind","ev","preventDefault","data","FormData","append","uploadInput","files","fetch","method","body","then","response","console","log","json","setState","prediction","render","ref"],"mappings":"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","sourcesContent":["import React, {useEffect,useState} from 'react'; \nimport docpic from './service.png'\n\nclass Test extends React.Component{\n\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          result: '',\n        };\n    \n        this.handleUploadFile = this.handleUploadFile.bind(this);\n      }\n    \n      handleUploadFile(ev) {\n        ev.preventDefault();\n    \n        const data = new FormData();\n        data.append('file', this.uploadInput.files[0]);\n        // data.append('filename', this.fileName.value);\n    \n        fetch('http://localhost:8080/predict', {\n          method: 'POST',\n          body: data,\n        }).then((response) => {\n            this.console.log(data)\n          response.json().then((body) => {\n            this.setState({ result:data.prediction  });\n          });\n        });\n      }\n\n    //   console.log(data);\n\n      \n     render(){ return (\n\n        <section id=\"test\" className=\"test\">\n            <h2 className=\"test-h\">Our service</h2>\n        <div className=\"container-t\">\n          <div className=\"test\">\n                <h2 >Check Whether you have<br/> Parkinson's Disease or not</h2>\n          </div>\n          <div class=\"row justify-content-between align-items-center\">\n             \n              <div id=\"drop-area\">\n                <form onSubmit={this.handleUploadFile} className='my-form' encType=\"multipart/form-data\">  \n                <p>Upload Your audio in .wav format here</p>\n                <br/>\n                <input ref={(ref)=> {this.uploadInput=ref;}} className=\"select\" type=\"file\" name=\"file\" id=\"fileElem\" />  \n                <br/>\n                <input className=\"button\" htmlFor=\"fileElem\" type = \"submit\" value=\"Upload\"/> \n                \n                {/* <button className=\"button\">Upload</button> */}\n                </form>  \n              </div>\n          </div>\n        </div>\n        <div className=\"doctor\">\n        <img className=\"doc-pic\"  src={docpic} alt=\"doc\" />\n        </div>\n        <div className=\"result\">\n            <br/>\n            <br/>\n            <h1 id=\"prediction\">{this.result}</h1>\n            \n            <p>Probability of Patient having Parkinson's</p>\n        </div>\n\n        <div className=\"how\">\n        <h1 className=\"cal\">How the result is calculated?</h1>\n        <br/>\n\n        <p> After you submit your voice file. The system then runs some algorithms to extract important information from the audio file.\n             Further the information is send to the extensively tested machine learning model and then model predicts whether the user has parkinson's diesease or not</p>\n        </div>\n        </section>\n\n\n    );\n  }\n}\n  \n  export default Test;\n  // export default Example;\n  "]},"metadata":{},"sourceType":"module"}