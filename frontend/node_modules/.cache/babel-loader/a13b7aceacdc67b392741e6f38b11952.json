{"ast":null,"code":"var _jsxFileName = \"/home/jaidev/college/mlh/parkinsonai/frontend/parkinson/src/Components/test.js\";\nimport React, { useEffect, useState } from 'react';\nimport docpic from './service.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Test extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      FileURL: '',\n      result: ''\n    };\n    this.handleUploadFile = this.handleUploadFile.bind(this);\n  } //   const [userData,setUserData]=useState({});\n\n\n  handleUploadFile(ev) {\n    ev.preventDefault();\n    const data = new FormData();\n    data.append('file', this.uploadInput.files[0]); // data.append('filename', this.fileName.value);\n\n    fetch('http://localhost:8080/predict', {\n      method: 'POST',\n      body: data\n    }).then(res => {\n      // console.log(res)\n      res.json().then(body => {\n        console.log(body); // setUserData(body.prediction);\n\n        this.setState({\n          result: body.prediction\n        });\n      });\n    });\n  } //   const [userData,setUserData]=handleUploadFile;\n  //   \n  //   useEffect(()=>{\n  //     fetch('http://localhost:8080/predict', {\n  //       method: 'POST',\n  //       body: data,\n  //     }).then(response => {\n  //       response.json().then(body => {\n  //           console.log(data.prediction);\n  //         setUserData({data});\n  //       })\n  //     );\n  //   }, []);\n\n\n  render() {\n    const {\n      result\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"test\",\n      className: \"test\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"test-h\",\n        children: \"Our service\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-t\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"test\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Check Whether you have\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 44\n            }, this), \" Parkinson's Disease or not\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"row justify-content-between align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"drop-area\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: this.handleUploadFile,\n              className: \"my-form\",\n              encType: \"multipart/form-data\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Upload Your audio in .wav format here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                ref: ref => {\n                  this.uploadInput = ref;\n                },\n                className: \"select\",\n                type: \"file\",\n                name: \"file\",\n                id: \"fileElem\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button\",\n                htmlFor: \"fileElem\",\n                type: \"submit\",\n                children: \"Upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"doctor\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"doc-pic\",\n          src: docpic,\n          alt: \"doc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"prediction\",\n          children: result\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Probability of Patient having Parkinson's\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"how\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"cal\",\n          children: \"How the result is calculated?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" After you submit your voice file. The system then runs some algorithms to extract important information from the audio file. Further the information is send to the extensively tested machine learning model and then model predicts the probability of user having parkinson's disease\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Test; // export default Example;","map":{"version":3,"sources":["/home/jaidev/college/mlh/parkinsonai/frontend/parkinson/src/Components/test.js"],"names":["React","useEffect","useState","docpic","Test","Component","constructor","props","state","FileURL","result","handleUploadFile","bind","ev","preventDefault","data","FormData","append","uploadInput","files","fetch","method","body","then","res","json","console","log","setState","prediction","render","ref"],"mappings":"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","sourcesContent":["import React, {useEffect,useState} from 'react'; \nimport docpic from './service.png'\n\nclass Test extends React.Component{\n\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          FileURL: '',\n          result:''\n        };\n    \n        this.handleUploadFile = this.handleUploadFile.bind(this);\n      }\n\n\n    //   const [userData,setUserData]=useState({});\n    \n      handleUploadFile(ev) {\n        ev.preventDefault();\n        \n        const data = new FormData();\n        data.append('file', this.uploadInput.files[0]);\n        // data.append('filename', this.fileName.value);\n    \n        fetch('http://localhost:8080/predict', {\n          method: 'POST',\n          body: data,\n        }).then(res => {\n            // console.log(res)\n            \n          res.json().then(body => {\n            \n            console.log(body);\n            // setUserData(body.prediction);\n            this.setState({result:body.prediction})\n            \n          });\n        });\n      }\n\n    //   const [userData,setUserData]=handleUploadFile;\n\n    //   \n\n    //   useEffect(()=>{\n\n    \n\n    //     fetch('http://localhost:8080/predict', {\n    //       method: 'POST',\n    //       body: data,\n    //     }).then(response => {\n    //       response.json().then(body => {\n    //           console.log(data.prediction);\n    //         setUserData({data});\n    //       })\n    //     );\n\n    //   }, []);\n\n\n      \n     render(){\n        \n        const {result}=this.state;\n        \n        return (\n\n        <section id=\"test\" className=\"test\">\n            <h2 className=\"test-h\">Our service</h2>\n        <div className=\"container-t\">\n          <div className=\"test\">\n                <h2 >Check Whether you have<br/> Parkinson's Disease or not</h2>\n          </div>\n          <div class=\"row justify-content-between align-items-center\">\n             \n              <div id=\"drop-area\">\n                <form onSubmit={this.handleUploadFile} className='my-form' encType=\"multipart/form-data\">  \n                <p>Upload Your audio in .wav format here</p>\n                <br/>\n                <input ref={(ref)=> {this.uploadInput=ref;}} className=\"select\" type=\"file\" name=\"file\" id=\"fileElem\" />  \n                <br/>\n                \n                {/* <input className=\"button\" htmlFor=\"fileElem\" type = \"submit\" value=\"Upload\"/>  */}\n                \n                <button className=\"button\" htmlFor=\"fileElem\" type=\"submit\">Upload</button>\n                </form>  \n              </div>\n          </div>\n        </div>\n        <div className=\"doctor\">\n        <img className=\"doc-pic\"  src={docpic} alt=\"doc\" />\n        </div>\n        <div className=\"result\">\n            <br/>\n            <br/>\n            <br/>\n            <br/>\n            <h1 id=\"prediction\">{result}</h1>\n            \n            <p>Probability of Patient having Parkinson's</p>\n        </div>\n\n        <div className=\"how\">\n        <h1 className=\"cal\">How the result is calculated?</h1>\n        <br/>\n\n        <p> After you submit your voice file. The system then runs some algorithms to extract important information from the audio file.\n             Further the information is send to the extensively tested machine learning model and then model predicts the probability of user having parkinson's disease</p>\n        </div>\n        </section>\n\n\n    );\n  }\n}\n  \n  export default Test;\n  // export default Example;\n  "]},"metadata":{},"sourceType":"module"}